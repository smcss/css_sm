// NOTE This is just a method of sizing elements. It shold be used
// alongs side such classes as .floats, or .flex-rows.

// IE10 required that children be of type *display: block*
@mixin flow($cols, $margin: 0)
    @if ($margin == 0)
        & > *
            width: 100%/$cols
    @else
        & > *
            width: calc(100%/#{$cols} - #{$cols - 1}/#{$cols}*#{$margin*1px})
        // Just a little helper to make use of .floats modifier with
        // different height of cells.
        &.floats > :nth-child(#{$cols}n + 1)
            @extend .cb
        & > :not(:nth-child(#{$cols}n + 1))
            margin-left: $margin*1px
        & > :nth-child(n + #{$cols + 1})
            margin-top: $margin*1px

@mixin flow-class($cols, $margin: 0)
    @if ($margin == 0)
        .flow#{$cols}
            @include flow($cols)
    @else
        .flow#{$cols}m#{$margin}
            @include flow($cols, $margin)

@for $cols from 2 through 5
    @each $margin in (5, 10, 15, 20, 25)
        @include flow-class($cols, $margin)
