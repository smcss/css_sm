// .xm.mt5 should yield margin: 5px 0 0 0
// .ma.mv5 should yield margin: 5px auto 5px auto
// .m5.xmt should yield margin: 0 5px 5px 5px
// .m5.mv10 should yield margin: 10px 5px 10px 5px
// .m5.mt10 should yield margin: 10px 5px 5px 5px

@mixin xm
    margin: 0

@mixin xml
    margin-left: 0

@mixin xmr
    margin-right: 0

@mixin xmt
    margin-top: 0

@mixin xmb
    margin-bottom: 0

@mixin m($size)
    @include eval-size(margin, $size)

@mixin mv($size)
    @include eval-size(margin-top, $size)
    @include eval-size(margin-bottom, $size)

@mixin mh($size)
    @include eval-size(margin-left, $size)
    @include eval-size(margin-right, $size)

@mixin mt($size)
    @include eval-size(margin-top, $size)

@mixin ml($size)
    @include eval-size(margin-left, $size)

@mixin mb($size)
    @include eval-size(margin-bottom, $size)

@mixin mr($size)
    @include eval-size(margin-right, $size)

// There is several ways to implement margin groups.
//
// 1. `.mi5 > * + * { margin-left: 5px; }`
//
// 2. `.mi5 > :nth-child(n+2) { margin-left: 5px; }`
//
// 3. `.mi5 > :not(:last-child) { margin-right: 5px; }`
//    This method allows wrapping elements.

// Take a look at GROUPS.md
@mixin mg($size)
    & > :nth-child(n+2) // * + *
        @include eval-size(margin-top, $size)

// Take a look at GROUPS.md
@mixin mi($size)
    & > :nth-child(n+2) // * + *
        @include eval-size(margin-left, $size)
